server:
  port: 8000

spring:
  application:
    name: rate-limit-service

  redis:
    url: rediss://default:AYkFAAIncDE0YTNiNzc1NGVhYzc0Y2U2OTcyNDJhNTdmY2JlY2YwY3AxMzUwNzc@full-stag-35077.upstash.io:6379
    timeout: 60000

  kafka:
    bootstrap-servers: d3ucbnmc4cape6v3n30g.any.us-east-1.mpx.prd.cloud.redpanda.com:9092
    properties:
      security.protocol: SASL_SSL
      sasl.mechanism: SCRAM-SHA-256
      sasl.jaas.config: >
        org.apache.kafka.common.security.scram.ScramLoginModule required
        username="kafka-user"
        password="ErRw66rVt47EU5EG45kOPXF5f6mYab";
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 0
      acks: 1
      properties:
        max.block.ms: 5000
        request.timeout.ms: 30000
        delivery.timeout.ms: 120000

    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.add.type.headers: false

app:
  freePlan:
    corePoolSize: 10
    maxPoolSize: 20
    keepAliveTime: 60
    dequeSize: 100
  paidPlan:
    corePoolSize: 50
    maxPoolSize: 100
    keepAliveTime: 60
    dequeSize: 100
  refillRate: 2
  refillTimeIntervalSeconds: 5
  maxBucketCapacity: 10
  isNotificationToKafka: true
